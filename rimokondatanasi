import tkinter as tk
import pyperclip

class ButtonApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Button App")

        # ボタンに表示する数字リスト
        self.button_numbers = [
            ['1', '2', '3'],
            ['4', '5', '6'],
            ['7', '8', '9'],
            ['10', '11', '12'],
            ['13', '14', '15'],
            ['16', '17', '18'],
            ['19', '20', '21'],
            ['22', '23', '24'],
        ]

        self.create_labels()
        self.create_input_form()
        self.create_buttons()

    def create_labels(self):
        hello_label = tk.Label(self.root, text="HELLO", font=("Helvetica", 16, "bold"))
        hello_label.grid(row=0, column=3, columnspan=2, padx=5, pady=5, sticky='ew')  # ウィジェットの横幅を広げる

        label_label = tk.Label(self.root, text="LABEL", font=("Helvetica", 16, "bold"))
        label_label.grid(row=0, column=5, columnspan=2, padx=5, pady=5, sticky='ew')  # ウィジェットの横幅を広げる

        self.button_labels = []
        for i in range(3):
            button_label_var = tk.StringVar()
            button_label = tk.Label(self.root, textvariable=button_label_var, font=("Helvetica", 14))
            button_label.grid(row=i+2, column=9, columnspan=3, padx=5, pady=5, sticky='ew')  # ウィジェットの横幅を広げる
            self.button_labels.append(button_label_var)

    def create_input_form(self):
        self.input_var = tk.StringVar()
        input_entry = tk.Entry(self.root, textvariable=self.input_var)
        input_entry.grid(row=1, column=3, columnspan=4, padx=5, pady=5, sticky='ew')  # ウィジェットの横幅を広げる

        copy_button = tk.Button(self.root, text="Copy", command=self.copy_text)
        copy_button.grid(row=1, column=7, columnspan=2, padx=5, pady=5, sticky='ew')  # ウィジェットの横幅を広げる

    def create_buttons(self):
        for i in range(8):
            for j in range(3):
                number = self.button_numbers[i][j]
                button = tk.Button(self.root, text=number, command=lambda n=number: self.handle_button_click(int(n)))
                button.grid(row=i+2, column=j, padx=5, pady=5)

                # ボタン3以外の背景色をデフォルトに設定
                if number != '3':
                    button.config(bg=self.root.cget('bg'))  # 親ウィンドウの背景色を使用

    def handle_button_click(self, number):
        setumei_text = self.setumei(number)  # カスタム情報を取得
        self.input_var.set(setumei_text)  # 入力フォームにカスタム情報を表示
        self.button_labels[number % 3].set(f"Button {number} pressed: {setumei_text}")  # ボタンが押された情報を対応するラベルに表示
        pyperclip.copy(setumei_text)  # クリップボードに保存
        print(f"Button {number} clicked: {setumei_text}")

    def setumei(self, number):
        # ここで各ボタンごとのカスタム情報を定義
        if number == 1:
            return "Custom Information for Button 1"
        elif number == 2:
            return "Custom Information for Button 2"
        # 他のボタンに関するカスタム情報を追加
        else:
            return f"Custom Information for Button {number}"

    def copy_text(self):
        text_to_copy = self.input_var.get()
        pyperclip.copy(text_to_copy)
        print(f"Copying text: {text_to_copy}")

if __name__ == "__main__":
    root = tk.Tk()
    app = ButtonApp(root)
    root.mainloop()
