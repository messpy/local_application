import tkinter as tk
from pynput import keyboard
import time

class KeyRecorder:
    def __init__(self, root):
        self.root = root
        self.root.title("Key Recorder")

        self.recorded_keys = []
        self.play_count = 0

        self.record_button = tk.Button(root, text="Record", command=self.start_recording)
        self.record_button.pack(pady=10)

        self.play_button = tk.Button(root, text="Play", command=self.play_recorded_keys)
        self.play_button.pack(pady=10)

        self.play_count_label = tk.Label(root, text="Play Count:")
        self.play_count_label.pack()

        self.play_count_entry = tk.Entry(root)
        self.play_count_entry.pack()

        self.play_count_entry.insert(0, "1")

        self.recorded_keys_label = tk.Label(root, text="Recorded Keys:")
        self.recorded_keys_label.pack()

        self.listener = keyboard.Listener(on_press=self.on_key_press)
        self.listener.start()

        self.ctrl_pressed = False
        self.alt_pressed = False

    def on_key_press(self, key):
        if hasattr(key, 'char') and key.char is not None:
            if self.ctrl_pressed:
                self.recorded_keys.append('Ctrl+' + key.char)
            elif self.alt_pressed:
                self.recorded_keys.append('Alt+' + key.char)
            else:
                self.recorded_keys.append(key.char)
        elif str(key) == 'Key.alt_l' or str(key) == 'Key.alt_r':
            self.alt_pressed = True
        elif str(key) == 'Key.ctrl_l' or str(key) == 'Key.ctrl_r':
            self.ctrl_pressed = True
        elif key == keyboard.Key.alt and self.alt_pressed:
            self.recorded_keys.append('<Alt+Tab>')
        elif key == keyboard.KeyCode.from_char('v') and self.ctrl_pressed:
            self.recorded_keys.append('<Ctrl+V>')

        # キーが押されるたびにラベルを更新
        self.recorded_keys_label.config(text="Recorded Keys: " + " ".join(self.recorded_keys))

    def start_recording(self):
        self.recorded_keys = []  # Reset recorded keys
        self.play_count = int(self.play_count_entry.get())
        print("Recording... Press 'Stop Recording' to finish.")

    def play_recorded_keys(self):
        for _ in range(self.play_count):
            for key in self.recorded_keys:
                if key == '<Alt+Tab>':
                    keyboard.Controller().press(keyboard.Key.alt)
                    keyboard.Controller().press(keyboard.Key.tab)
                    time.sleep(0.1)
                    keyboard.Controller().release(keyboard.Key.tab)
                    time.sleep(0.1)
                    keyboard.Controller().release(keyboard.Key.alt)
                elif key == '<Ctrl+V>':
                    keyboard.Controller().press(keyboard.Key.ctrl)
                    keyboard.Controller().press('v')
                    time.sleep(0.1)
                    keyboard.Controller().release('v')
                    keyboard.Controller().release(keyboard.Key.ctrl)
                elif '<Ctrl+' in key:
                    _, char = key.split('+')
                    keyboard.Controller().press(keyboard.Key.ctrl)
                    time.sleep(0.1)
                    keyboard.Controller().type(char)
                    keyboard.Controller().release(keyboard.Key.ctrl)
                elif '<Alt+' in key:
                    _, char = key.split('+')
                    keyboard.Controller().press(keyboard.Key.alt)
                    time.sleep(0.1)
                    keyboard.Controller().type(char)
                    keyboard.Controller().release(keyboard.Key.alt)
                else:
                    keyboard.Controller().type(key)

            time.sleep(1)  # Wait 1 second between each play iteration

        # プレイが終了したらキーリスニングを停止
        self.listener.stop()

if __name__ == "__main__":
    root = tk.Tk()
    app = KeyRecorder(root)
    root.mainloop()
